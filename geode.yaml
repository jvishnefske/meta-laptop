# to build install kas with pip, or docker.

#  $ kas checkout
#  $ kas build
#  $ kas build  -c populate_sdk_ext
---
header:
  version: 1
machine: genericx86
distro: poky
target: core-image-full-cmdline
repos:
  meta-laptop-bsp:
    path: .
  # openenbedded-core:
  #   url: "git://git.openembedded.org/openembedded-core"
  #   path: layers/oe-core
  #   refspec: dunfell
  #   layers:
  #     meta-selftest:
  #     meta-skeleton:
  #     meta:
  # bitbake:
  #   url: http://git.openembedded.org/git/bitbake
  #   path: bitbake
  #   refspec: dunfell

  poky:
    url: "https://git.yoctoproject.org/git/poky"
    path: layers/poky
    refspec: dunfell
    layers:
      meta:
      meta-skeleton:
      meta-selftest:
      meta-poky:
      meta-yocto-bsp:
  meta-openembedded:
    url: "git://git.openembedded.org/meta-openembedded"
    path: layers/meta-openembedded
    refspec: dunfell
    layers:
      meta-oe:
      meta-python:
      #      meta-networking:
      meta-initramfs:
  roboust-auto-update-controller:
    url: "https://github.com/rauc/meta-rauc.git"
    path: layers/meta-rauc
    refspec: dunfell
bblayers_conf_header:
  arria10: |
    #BBPATH = "${TOPDIR}"
    #BBFILES ?= ""
    # UBOOT_CONFIG = "todo: add name here"
    # UBOOT_EXTLINUX_FDT_default = "todo add .dtb here"
local_conf_header:
  development: |
    #DISTRO_FEATURES_append = " rauc"
    MACHINE_FEATURES = "\
    screen keyboard pci usbhost ext2 ext3 x86 acpi serial usbgadget alsa"
    MACHINE_EXTRA_RRECOMMENDS += "kernel-modules"
    EXTRA_IMAGE_FEATURES_append = " debug-tweaks"
    EXTRA_IMAGE_FEATURES_append = " tools-debug"
    EXTRA_IMAGE_FEATURES_append = " tools-profile"
    EXTRA_IMAGE_FEATURES_append = " tools-testapps"
    EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"
    EXTRA_IMAGE_FEATURES_append = " tools-sdk"
    DISTRO_FEATURES_append = " wayland"
    # EXTRA_IMAGE_FEATURES_append = " stateless-rootfs"
    EXTRA_IMAGE_FEATURES_append = " read-only-rootfs"
    EXTRA_IMAGE_FEATURES_append = " package-management"
    PACKAGE_DEBUG_SPLIT_STYLE = 'debug-file-directory'
    IMAGE_INSTALL_append = " apt"
    IMAGE_INSTALL_append = " python3-pip"
    IMAGE_INSTALL_append = " python3-pyserial"
    IMAGE_INSTALL_append = " libubsan"
    IMAGE_INSTALL_append = " libasan"
    # IMAGE_INSTALL_append = " lmsensors-libsensors"
    IMAGE_INSTALL_append = " boost"
    #IMAGE_INSTALL_append = " rauc"
    SDKEXTPATH ?= "saratoga"
    SDK_UPDATE_URL ?= ""
    # SSTATE_MIRRORS ?=
    # "file://.* http://vishnefske.com/saratoga-yocto/sstate-cache/PATH"
    PNBLACKLIST[qt5-creator] = "dependencies not currently avaliable"
    SDK_LOCAL_CONF_WHITELIST_append = "SSTATE_MIRRORS"
    SDK_LOCAL_CONF_BLACKLIST_append = 'BB_HASHSERVE'
    SSTATE_DIR ?= "/home/j/yocto/sstate-cache"
    DL_DIR ?= "/home/j/yocto/downloads"
    INITRAMFS_IMAGE ?= 'initramfs-debug-image'
    INITRAMFS_IMAGE_BUNDLE ?= "1"
    # CONF_VERSION ?= "1"
    PACKAGE_CLASSES ?= "package_deb"
    INIT_MANAGER ?= "systemd"
    PREFERRED_PROVIDER_virtual/kernel_arria10 = "linux-altera-ltsi-rt"
    PREFERRED_PROVIDER_virtual/kernel = "linux-yocto-rt"
    # IMAGE_FSTYPES_append = " wic"
    # WKS_FILE = "qemux86-grub-efi.wks"
    DEFAULTTUNE = "i586"
    # SOURCE_MIRROR_URL ?= ""
